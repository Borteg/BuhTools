
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиПользователяУФС = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрПериодКомпоновки = Новый ПараметрКомпоновкиДанных("Период");
	ПараметрПериод = НастройкиПользователяУФС.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрПериодКомпоновки);
	
	ДатаНачала = ПараметрПериод.Значение.ДатаНачала;
	ДатаОкончания = ПараметрПериод.Значение.ДатаОкончания;

	//Макет	
	Макет = ПолучитьМакет("ОтчетАгентаАэроэкспресс");
	
	ТЗПоезда = ДанныеДляОтчетаПоездов(ДатаНачала,ДатаОкончания);
	ТЗАвтобусы = ДанныеДляОтчетаАвтобусы(ДатаНачала,ДатаОкончания);
	
	ДанныеШапкаОтчета = ДанныеДляШапки(ДатаОкончания);
	
	Если ТЗПоезда.Свойство("Поезда") Тогда
		НовыеПараметрыОтчетаПоезда = ПараметрыОтчетаАгента();	
		ЗаполнитьПараметрыОтчета(ДатаОкончания,НовыеПараметрыОтчетаПоезда,"Поезда реализация");
		НовыеПараметрыОтчетаПоезда.ТаблицаДанных = ТЗПоезда.Поезда;
	КонецЕсли;
	
	Если ТЗАвтобусы.Свойство("Автобусы") Тогда
		НовыеПараметрыОтчетаАвтобусы = ПараметрыОтчетаАгента();	
		ЗаполнитьПараметрыОтчета(ДатаОкончания,НовыеПараметрыОтчетаАвтобусы,"Автобусы реализация");
		НовыеПараметрыОтчетаАвтобусы.ТаблицаДанных = ТЗАвтобусы.Автобусы;
	КонецЕсли;
	
	Если ТЗПоезда.Свойство("ПоездаОтмена") Тогда		
		НовыеПараметрыОтчетаПоездаОтмена = ПараметрыОтчетаАгента();	
		ЗаполнитьПараметрыОтчета(ДатаОкончания,НовыеПараметрыОтчетаПоездаОтмена,"Поезда отмена");
		НовыеПараметрыОтчетаПоездаОтмена.ТаблицаДанных = ТЗПоезда.ПоездаОтмена;
	КонецЕсли;
	
	Если ТЗАвтобусы.Свойство("АвтобусыОтмена") Тогда
		НовыеПараметрыОтчетаАвтобусыОтмена = ПараметрыОтчетаАгента();
		ЗаполнитьПараметрыОтчета(ДатаОкончания,НовыеПараметрыОтчетаАвтобусыОтмена,"Автобусы отмена");	
		НовыеПараметрыОтчетаАвтобусыОтмена.ТаблицаДанных = ТЗАвтобусы.АвтобусыОтмена; 
	КонецЕсли;
	
	//Табличный документ для вывода
	ТабДок = Новый ТабличныйДокумент;
	
	//Области отчета
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаОтчета");
	ОбластьНомерДоговора = Макет.ПолучитьОбласть("НомерДоговораШапка");
	
	ОбластьШапка.Параметры.Заполнить(ДанныеШапкаОтчета);
	ОбластьНомерДоговора.Параметры.Заполнить(ДанныеШапкаОтчета);
	//Вывод областей
	ТабДок.Вывести(ОбластьШапка);
	ТабДок.Вывести(ОбластьНомерДоговора);
	
	СтруктураПараметровОтчета = Новый Структура;
	Если ТЗПоезда.Свойство("Поезда") Тогда		
		ДобавитьОтчетАгента(ТабДок,НовыеПараметрыОтчетаПоезда);
		СтруктураПараметровОтчета.Вставить("Поезда",НовыеПараметрыОтчетаПоезда);	
	КонецЕсли;
	
	Если ТЗПоезда.Свойство("ПоездаОтмена") Тогда	
		ДобавитьОтчетАгента(ТабДок,НовыеПараметрыОтчетаПоездаОтмена);
		СтруктураПараметровОтчета.Вставить("ПоездаОтмена",НовыеПараметрыОтчетаПоездаОтмена);		
	КонецЕсли;

	Если ТЗАвтобусы.Свойство("Автобусы") Тогда
		ДобавитьОтчетАгента(ТабДок,НовыеПараметрыОтчетаАвтобусы);
		СтруктураПараметровОтчета.Вставить("Автобусы",НовыеПараметрыОтчетаАвтобусы);	
	КонецЕсли;
	
	Если ТЗАвтобусы.Свойство("АвтобусыОтмена") Тогда	
		ДобавитьОтчетАгента(ТабДок,НовыеПараметрыОтчетаАвтобусыОтмена);
		СтруктураПараметровОтчета.Вставить("АвтобусыОтмена",НовыеПараметрыОтчетаАвтобусыОтмена);		
	КонецЕсли;
	
	ВывестиОбластиИтоговые(ТабДок,СтруктураПараметровОтчета);

	//Параметры табличного документа
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСлева = 5;
    ТабДок.ПолеСправа = 5;
	ТабДок.ПолеСверху = 10;
	ТабДок.ПолеСнизу = 10;
	//ВыводДокумента
	ДокументРезультат.АвтоМасштаб = истина;
	ДокументРезультат.ПолеСлева = 5;
	ДокументРезультат.ПолеСправа = 5;
	ДокументРезультат.ПолеСверху = 10;
	ДокументРезультат.ПолеСнизу = 10;

	ДокументРезультат.Вывести(ТабДок);
	
КонецПроцедуры


Процедура ВывестиПустуюСтроку(ТабДок)
	Макет = ПолучитьМакет("ОтчетАгентаАэроэкспресс");
	ПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");	
	Табдок.Вывести(ПустаяСтрока);
КонецПроцедуры


Процедура ВывестиОбластиИтоговые(ТабДок,СтруктураПараметровОтчета)
	ВывестиПустуюСтроку(ТабДок);
	Макет = ПолучитьМакет("ОтчетАгентаАэроэкспресс");
	
	ПоПорядку = 1;
	
	НужныИтогиПоезда = Ложь;
	НужныИтогиАвтобусы = Ложь;
	
	ИтогоПоезда = 0;
	ИтогоАвтобусы = 0;
	АгнетскоеВознаграждение = 0;
	
	Если СтруктураПараметровОтчета.Свойство("Поезда") Тогда	
		
		ОбластьПункт1 = Макет.ПолучитьОбласть("Пункт1");
		ОбластьПункт1.Параметры.Заполнить(СтруктураПараметровОтчета.Поезда);
		ОбластьПункт1.Параметры.ПоПорядку = ПоПорядку;
		ПоПорядку = ПоПорядку + 1;
		НужныИтогиПоезда = Истина;	
		
		
		ИтогоСуммаПроданных = СтруктураПараметровОтчета.Поезда.ТаблицаДанных.Итог("Стоимость");	
		ИтогоПоезда =  ИтогоПоезда  + ИтогоСуммаПроданных; 
		ОбластьПункт1.Параметры.Сумма = "" + Формат(ИтогоСуммаПроданных,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(ИтогоСуммаПроданных)+")";		
		ТабДок.Вывести(ОбластьПункт1);
		АгнетскоеВознаграждение = АгнетскоеВознаграждение + СтруктураПараметровОтчета.Поезда.ТаблицаДанных.Итог("СуммаАгентВозн"); 
	КонецЕсли;
	
	Если СтруктураПараметровОтчета.Свойство("Автобусы") Тогда
		
		ОбластьПункт1 = Макет.ПолучитьОбласть("Пункт1");
		ОбластьПункт1.Параметры.Заполнить(СтруктураПараметровОтчета.Автобусы);
		ОбластьПункт1.Параметры.ПоПорядку = ПоПорядку;
		
		ИтогоСуммаПроданных = СтруктураПараметровОтчета.Автобусы.ТаблицаДанных.Итог("Стоимость");	
		ОбластьПункт1.Параметры.Сумма = "" + Формат(ИтогоСуммаПроданных,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(ИтогоСуммаПроданных)+")";	
		ПоПорядку = ПоПорядку + 1;
		НужныИтогиАвтобусы = Истина;
		ИтогоАвтобусы =  ИтогоАвтобусы  + ИтогоСуммаПроданных; 
		ТабДок.Вывести(ОбластьПункт1);
		АгнетскоеВознаграждение = АгнетскоеВознаграждение + СтруктураПараметровОтчета.Автобусы.ТаблицаДанных.Итог("СуммаАгентВозн"); 

	КонецЕсли;
	
	Если СтруктураПараметровОтчета.Свойство("ПоездаОтмена") Тогда	
		ОбластьПункт2 = Макет.ПолучитьОбласть("Пункт2");
		ОбластьПункт2.Параметры.Заполнить(СтруктураПараметровОтчета.ПоездаОтмена);
		ОбластьПункт2.Параметры.ПоПорядку = ПоПорядку;
		ИтогоСуммаПроданных = СтруктураПараметровОтчета.ПоездаОтмена.ТаблицаДанных.Итог("Стоимость");	
		ОбластьПункт2.Параметры.Сумма = "" + Формат(ИтогоСуммаПроданных,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(ИтогоСуммаПроданных)+")";	
		ПоПорядку = ПоПорядку + 1;
		НужныИтогиПоезда = Истина;
		ИтогоПоезда =  ИтогоПоезда  - ИтогоСуммаПроданных; 

		ТабДок.Вывести(ОбластьПункт2);
		АгнетскоеВознаграждение = АгнетскоеВознаграждение - СтруктураПараметровОтчета.ПоездаОтмена.ТаблицаДанных.Итог("СуммаАгентВозн"); 

	КонецЕсли;
	
	Если СтруктураПараметровОтчета.Свойство("АвтобусыОтмена") Тогда	
		
		ОбластьПункт2 = Макет.ПолучитьОбласть("Пункт2");
		ОбластьПункт2.Параметры.Заполнить(СтруктураПараметровОтчета.АвтобусыОтмена);
		ОбластьПункт2.Параметры.ПоПорядку = ПоПорядку;
		ИтогоСуммаПроданных = СтруктураПараметровОтчета.АвтобусыОтмена.ТаблицаДанных.Итог("Стоимость");	
		ОбластьПункт2.Параметры.Сумма = "" + Формат(ИтогоСуммаПроданных,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(ИтогоСуммаПроданных)+")";	
		ПоПорядку = ПоПорядку + 1;
		НужныИтогиАвтобусы = Истина;
		ИтогоАвтобусы =  ИтогоАвтобусы  - ИтогоСуммаПроданных; 
		ТабДок.Вывести(ОбластьПункт2);
		  АгнетскоеВознаграждение = АгнетскоеВознаграждение - СтруктураПараметровОтчета.АвтобусыОтмена.ТаблицаДанных.Итог("СуммаАгентВозн"); 

	КонецЕсли;
	
	
	Если НужныИтогиПоезда Тогда
		
		ОбластьПункт3 = Макет.ПолучитьОбласть("Пункт3");
		ОбластьПункт3.Параметры.Заполнить(СтруктураПараметровОтчета.Поезда);
		ОбластьПункт3.Параметры.ПоПорядку = ПоПорядку;
		
		ОбластьПункт3.Параметры.Сумма = "" + Формат(ИтогоПоезда,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(ИтогоПоезда)+")";	
		ПоПорядку = ПоПорядку + 1;
		
		ТабДок.Вывести(ОбластьПункт3);
		
	КонецЕсли;
	
	Если НужныИтогиАвтобусы Тогда
		
		ОбластьПункт3 = Макет.ПолучитьОбласть("Пункт3");
		ОбластьПункт3.Параметры.Заполнить(СтруктураПараметровОтчета.Автобусы);
		ОбластьПункт3.Параметры.ПоПорядку = ПоПорядку;
		ОбластьПункт3.Параметры.Сумма = "" + Формат(ИтогоАвтобусы,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(ИтогоАвтобусы)+")";	

		ПоПорядку = ПоПорядку + 1;

		ТабДок.Вывести(ОбластьПункт3);
		
	КонецЕсли;
	
	Если НужныИтогиАвтобусы Или НужныИтогиПоезда Тогда
		
		ОбластьПункт4 = Макет.ПолучитьОбласть("Пункт4");
		
		ОбластьПункт4.Параметры.ПоПорядку = ПоПорядку;
		ОбластьПункт4.Параметры.Сумма = "" + Формат(АгнетскоеВознаграждение,"ЧДЦ=2; ЧРД=-") + " ("+СформироватьПредставлениеЧислаПрописью(АгнетскоеВознаграждение)+")";	
		ПоПорядку = ПоПорядку + 1;
		
		ТабДок.Вывести(ОбластьПункт4);
		
	КонецЕсли;
	
	ОбластьПункт5 = Макет.ПолучитьОбласть("Пункт5");
	ОбластьПункт5.Параметры.ПоПорядку = ПоПорядку;
	ТабДок.Вывести(ОбластьПункт5);
	ВывестиПустуюСтроку(ТабДок);
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	ТабДок.Вывести(ОбластьПодписи);
	
КонецПроцедуры

Функция СформироватьПредставлениеЧислаПрописью(Число)
	
	
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
	ПрописьЧисла = ЧислоПрописью(Число, ФормСтрока, ПарПредмета);
	
	Возврат ПрописьЧисла;
	
КонецФункции

#Область ЗаполнениеДанных
Процедура ЗаполнитьПараметрыОтчета(Месяц,ДанныеДляЗаполнения,Направление)
	
	Если Направление = "Поезда реализация" Тогда
		
		ЗаполнитьДанныеДляПоездов(ДанныеДляЗаполнения,Месяц);
		
	ИначеЕсли Направление = "Автобусы реализация" Тогда
		
		ЗаполнитьДанныеДляАвтобусов(ДанныеДляЗаполнения,Месяц);
		
	ИначеЕсли Направление = "Поезда отмена" Тогда
		
		ЗаполнитьДанныеДляПоездовОтмена(ДанныеДляЗаполнения,Месяц);
		
	ИначеЕсли Направление = "Автобусы отмена" Тогда
		
		ЗаполнитьДанныеДляАвтобусовОтмена(ДанныеДляЗаполнения,Месяц);
			
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеДляПоездов(ДанныеДляЗаполнения,Месяц)
		
	ПодготовитьДанныеПериодов(ДанныеДляЗаполнения,Месяц);
	ДанныеДляЗаполнения.Направление = "Поездах";
	ДанныеДляЗаполнения.НДС = "НДС 0%";
    ДанныеДляЗаполнения.ДействияСБилетами = "реализации";
    ДанныеДляЗаполнения.НаправлениеРеализации = "реализации";
	
	
КонецПроцедуры

Функция ДанныеДляОтчетаПоездов(Знач ДатаНачала,Знач ДатаОкончания)
	
	ДанныеДляОтчета = Новый Структура;
	ДатаНачалаСтрока = Формат(ДатаНачала,"ДФ=yyyyMMdd");
	ДатаОкончания = КонецДня(ДатаОкончания) + 1; 
	ДатаОкончанияСтрока = Формат(ДатаОкончания,"ДФ=yyyyMMdd");

	Connection = Новый COMОбъект("ADODB.Connection");
	Connection.ConnectionTimeout  = 0;
	Connection.CommandTimeout   = 0;
	Connection.Open ("DRIVER={SQL Server};SERVER=db1;UID=fin_auditor;PWD=Cdthrf123;DATABASE=PGW2_R");
	
	ТекстЗапроса = "set transaction isolation level read uncommitted
	|SET NOCOUNT ON
	| DECLARE @begDate DATETIME = '"+ДатаНачалаСтрока+"' 
	| DECLARE @endDate DATETIME = '" +ДатаОкончанияСтрока+"'
	|   SELECT sum(t.amount/o.nplace) as Стоимость, 
	|			t.type as ТИП,
	|			o.ticketclass as Класс,
	|			aeroclass.TicketClass as Наименование,
	|       	t.amount/o.nplace as Цена,
	|	        count(p.ticketid) as КоличествоБилетовВсего,
	|            case when t.type = 1 then convert(date, t.ConfirmDate) else convert(date, t2.ConfirmDate) end  as День
	//|           isNULL(acc.sumfee,0)/o.nplace as fee,  
	//|           sum(case when t.type = 14 then acc.sumfee/o.nplace else 0 end) as АгентскоеВознаграждениеВозвраты
	|				FROM Trans t (NOLOCK) JOIN 
	|					   orRzhdAE o (NOLOCK) ON t.idtrans = o.idtrans JOIN
	|						AeroTicketClass aeroclass (NOLOCK) ON o.ticketclass = aeroclass.AeroTicketClassId JOIN
	|                       AeroPassenger p (NOLOCK) on p.TransId = t.idtrans  left JOIN
	|                          Trans t2 (NOLOCK) on (t.prevTr = t2.idtrans and t.type =14)
	//| 					    ufs_Accountings acc on (t.idtrans = acc.idtrans and acc.idtaker = 49283 and t.type = 14 and acc.tpstatus = 5)                  
	|				WHERE
	|				t.status = 0 --транзакция успешная
	|				AND t.test = 0 --не тестовая
	|			AND t.ConfirmDate >= @begDate
	|			AND t.ConfirmDate < @endDate
	|	AND 1 = 
 	|	 (SELECT COUNT(*) FROM Trans t (NOLOCK) JOIN AeroPassenger a (NOLOCK) ON t.idtrans = a.TransId 
	| 			AND a.ticketid=p.ticketid AND
	| 			t.status = 0 --транзакция успешная
	| 			AND t.test = 0 --не тестовая
	| 			AND t.ConfirmDate >= @begDate 
	|			AND t.ConfirmDate < @endDate)
	|group by
	|t.type, 
    |o.ticketclass,
    |aeroclass.TicketClass,
	|t.amount/o.nplace,
	| case when t.type = 1 then convert(date, t.ConfirmDate) else convert(date, t2.ConfirmDate) end
	|ORDER BY 2";
	
	RecordSet = Connection.Execute(ТекстЗапроса);
	
	ТаблицаСДанными = ПодготовитьПустуюТаблицу();
	ТаблицаСДаннымиВозвратов = ПодготовитьПустуюТаблицу();
	
	КоличествоБилетов = 0;
	
	Пока НЕ RecordSet.EOF() Цикл
		
		ТИП = Число(RecordSet.Fields("ТИП").Value);
		
		Если Тип = 1 Тогда 
			НоваяСтрока = ТаблицаСДанными.Добавить();
		Иначе
			НоваяСтрока = ТаблицаСДаннымиВозвратов.Добавить();
		КонецЕсли;
		
		НоваяСтрока.ТарифЧисло = Число(RecordSet.Fields("Класс").Value);
		
		НоваяСтрока.Количество = Число(RecordSet.Fields("КоличествоБилетовВсего").Value);
		НоваяСтрока.Цена = Число(RecordSet.Fields("Цена").Value);
		НоваяСтрока.Стоимость = Число(RecordSet.Fields("Стоимость").Value);
		
		ДатаДляПреобразования = RecordSet.Fields("День").Value;
		ДатаДляПреобразования = СтрЗаменить(ДатаДляПреобразования,"-","");
		ДатаВТЗ = Дата(ДатаДляПреобразования);

		НоваяСтрока.ДатаДляТарифа = ДатаВТЗ;	
		Если Тип = 1 Тогда
			КоличествоБилетов = КоличествоБилетов + Число(RecordSet.Fields("КоличествоБилетовВсего").Value);
		Иначе
			КоличествоБилетов = КоличествоБилетов - Число(RecordSet.Fields("КоличествоБилетовВсего").Value);
			//НоваяСтрока.АгентВозн = Число(RecordSet.Fields("fee").Value);
			//НоваяСтрока.СуммаАгентВозн = Число(RecordSet.Fields("АгентскоеВознаграждениеВозвраты").Value);
		КонецЕсли;
		
		RecordSet.MoveNext();
		
	КонецЦикла; 
	RecordSet.Close();
	Connection.Close();

	Сообщить("Количество проданных билетов на поезда(покупки-возвраты) = " + КоличествоБилетов);
	Если ТаблицаСДанными.Количество() > 0 Тогда
		//Агентское вознаграждение
		ТаблицаСДанными = РасчитатьАгентскоеВозн(ТаблицаСДанными);
		ДанныеДляОтчета.Вставить("Поезда",ТаблицаСДанными);
	КонецЕсли;

	Если ТаблицаСДаннымиВозвратов.Количество() > 0 Тогда
		//Агентское вознаграждение
		ТаблицаСДаннымиВозвратов = РасчитатьАгентскоеВозн(ТаблицаСДаннымиВозвратов);
		ДанныеДляОтчета.Вставить("ПоездаОтмена",ТаблицаСДаннымиВозвратов);
	КонецЕсли;
	
	Возврат ДанныеДляОтчета;
	
КонецФункции

функция ДанныеДляОтчетаАвтобусы(Знач ДатаНачала,Знач ДатаОкончания)
	
	ДанныеОтчета = Новый Структура;
	ДатаНачалаСтрока = Формат(ДатаНачала,"ДФ=yyyyMMdd");
	ДатаОкончания = КонецМесяца(ДатаОкончания) + 1; 
	ДатаОкончанияСтрока = Формат(ДатаОкончания,"ДФ=yyyyMMdd");
	
	Возврат ДанныеОтчета;

КонецФункции

Функция ДобавитьАгентскоеВознаграждение(ТЗ,КоличествоБилетовПроданных,Тип)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ТЗ.Тариф КАК Тариф,
	                |	ТЗ.ТарифЧисло КАК ТарифЧисло,
	                |	ТЗ.Количество КАК Количество,
	                |	ТЗ.Цена КАК Цена,
	                |	ТЗ.Стоимость КАК Стоимость,
	                |	ТЗ.АгентВозн КАК АгентВозн,
	                |	ТЗ.СуммаАгентВозн КАК СуммаАгентВозн,
					|   ТЗ.ДатаДляТарифа КАК ДатаДляТарифа 
	                |ПОМЕСТИТЬ ДанныеБезВозн
	                |ИЗ
	                |	&ТЗ КАК ТЗ
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ДанныеБезВозн.Количество КАК Количество,
	                |	ДанныеБезВозн.Цена КАК Цена,
	                |	ДанныеБезВозн.Стоимость КАК Стоимость,
	                |	ДанныеБезВозн.АгентВозн КАК АгентВозн,
	                |	ДанныеБезВозн.СуммаАгентВозн КАК СуммаАгентВозн,
	                |	Выбор Когда &ТИП = 14 Тогда ДанныеБезВозн.АгентВозн Иначе ЕстьNull(ТарифыАэроэкспрессПоездаГрадация.Вознаграждение,0) Конец КАК Вознаграждение,
	                |	ЕстьNull(ТарифыАэроэкспрессПоездаГрадация.КоличествоБилетов,0) КАК КоличествоБилетов,
	                |	ЕстьNull(ТарифыАэроэкспрессПоездаГрадация.Ссылка.Наименование,""Нет тарифа"") КАК Тариф
	                |ПОМЕСТИТЬ НеАгригированная
	                |ИЗ
	                |	ДанныеБезВозн КАК ДанныеБезВозн
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыАэроэкспрессПоезда.Градация КАК ТарифыАэроэкспрессПоездаГрадация
	                |		ПО ДанныеБезВозн.ТарифЧисло = ТарифыАэроэкспрессПоездаГрадация.Ссылка.Класс
	                |			И (ТарифыАэроэкспрессПоездаГрадация.Ссылка.Действующий)
	                |ГДЕ
	                |	ТарифыАэроэкспрессПоездаГрадация.КоличествоБилетов <= &КоличествоБилетовПроданных
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	НеАгригированная.Количество КАК Количество,
	                |	НеАгригированная.Цена КАК Цена,
	                |	НеАгригированная.Стоимость КАК Стоимость,
	                |	МАКСИМУМ(НеАгригированная.Вознаграждение) * Количество  КАК СуммаАгентВозн,
	                |	МАКСИМУМ(НеАгригированная.Вознаграждение) КАК АгентВозн,
	                |	НеАгригированная.Тариф КАК Тариф
	                |ИЗ
	                |	НеАгригированная КАК НеАгригированная
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	НеАгригированная.Количество,
	                |	НеАгригированная.Цена,
	                |	НеАгригированная.Стоимость,
	                |	НеАгригированная.Тариф";
	
	Запрос.УстановитьПараметр("ТЗ",ТЗ);
	Запрос.УстановитьПараметр("КоличествоБилетовПроданных",КоличествоБилетовПроданных);
	Запрос.УстановитьПараметр("ТИП",Тип);

	
	Результат = Запрос.Выполнить().Выгрузить();
		
	Возврат Результат;
	
КонецФункции

Функция РасчитатьАгентскоеВозн(ТЗ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ТЗ.ДатаДляТарифа КАК ДатаДляТарифа
	|ПОМЕСТИТЬ ДатыТарифа
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДатыТарифа.ДатаДляТарифа, МЕСЯЦ) КАК Месяц
	|ИЗ
	|	ДатыТарифа КАК ДатыТарифа
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДатыТарифа.ДатаДляТарифа, МЕСЯЦ)";
	
	Запрос.УстановитьПараметр("ТЗ",ТЗ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗСБилетами = Новый ТаблицаЗначений;
	ТЗСБилетами.Колонки.Добавить("Месяц",ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата),"Месяц");
	ТЗСБилетами.Колонки.Добавить("КоличествоБилетовВМесяце",ОбщегоНазначения.ОписаниеТипаЧисло(15,0,ДопустимыйЗнак.Любой),"КоличествоБилетовВМесяце");
	
	
	Пока Выборка.Следующий() Цикл
		КоличествоБилетовВМесяце = АэроЭкспрессРасчеты.ПодсчитатьКоличествоБилетов(НачалоМесяца(Выборка.Месяц),КонецМесяца(Выборка.Месяц));
		НоваяСтрокаТз = ТЗСБилетами.Добавить();
		НоваяСтрокаТз.Месяц = Выборка.Месяц;
		НоваяСтрокаТз.КоличествоБилетовВМесяце = КоличествоБилетовВМесяце;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЗ.Месяц КАК Месяц,
	|	ТЗ.КоличествоБилетовВМесяце КАК КоличествоБилетовВМесяце
	|ПОМЕСТИТЬ КоличествоБилетовВмесяцеДляТарифа
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Тариф КАК Тариф,
	|	Данные.ТарифЧисло КАК ТарифЧисло,
	|	Данные.Количество КАК Количество,
	|	Данные.Цена КАК Цена,
	|	Данные.Стоимость КАК Стоимость,
	|	Данные.АгентВозн КАК АгентВозн,
	|	Данные.СуммаАгентВозн КАК СуммаАгентВозн,
	|	Данные.ДатаДляТарифа КАК ДатаДляТарифа
	|ПОМЕСТИТЬ ДанныеБезВозн
	|ИЗ
	|	&ДанныеПоЧислам КАК Данные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеБезВозн.Тариф КАК Тариф,
	|	ДанныеБезВозн.ТарифЧисло КАК ТарифЧисло,
	|	ДанныеБезВозн.Количество КАК Количество,
	|	ДанныеБезВозн.Цена КАК Цена,
	|	ДанныеБезВозн.Стоимость КАК Стоимость,
	|	ДанныеБезВозн.АгентВозн КАК АгентВозн,
	|	ДанныеБезВозн.СуммаАгентВозн КАК СуммаАгентВозн,
	|	ДанныеБезВозн.ДатаДляТарифа КАК ДатаДляТарифа,
	|	КоличествоБилетовВмесяцеДляТарифа.КоличествоБилетовВМесяце КАК КоличествоБилетовВМесяце
	|ПОМЕСТИТЬ ДанныеСКоличествоБилетовВМесяце
	|ИЗ
	|	ДанныеБезВозн КАК ДанныеБезВозн
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоБилетовВмесяцеДляТарифа КАК КоличествоБилетовВмесяцеДляТарифа
	|		ПО (НАЧАЛОПЕРИОДА(ДанныеБезВозн.ДатаДляТарифа, МЕСЯЦ) = НАЧАЛОПЕРИОДА(КоличествоБилетовВмесяцеДляТарифа.Месяц, МЕСЯЦ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСКоличествоБилетовВМесяце.Тариф КАК Тариф,
	|	ДанныеСКоличествоБилетовВМесяце.ТарифЧисло КАК ТарифЧисло,
	|	ДанныеСКоличествоБилетовВМесяце.Количество КАК Количество,
	|	ДанныеСКоличествоБилетовВМесяце.Цена КАК Цена,
	|	ДанныеСКоличествоБилетовВМесяце.Стоимость КАК Стоимость,
	|	ДанныеСКоличествоБилетовВМесяце.АгентВозн КАК АгентВозн,
	|	ДанныеСКоличествоБилетовВМесяце.СуммаАгентВозн КАК СуммаАгентВозн,
	|	ДанныеСКоличествоБилетовВМесяце.ДатаДляТарифа КАК ДатаДляТарифа,
	|	ДанныеСКоличествоБилетовВМесяце.КоличествоБилетовВМесяце КАК КоличествоБилетовВМесяце,
	|	МАКСИМУМ(ПериодыТарифовАэроэкспресс.Период) КАК Период
	|ПОМЕСТИТЬ МаксимальныйПериодТарифа
	|ИЗ
	|	ДанныеСКоличествоБилетовВМесяце КАК ДанныеСКоличествоБилетовВМесяце
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыТарифовАэроэкспресс КАК ПериодыТарифовАэроэкспресс
	|		ПО ДанныеСКоличествоБилетовВМесяце.ТарифЧисло = ПериодыТарифовАэроэкспресс.Тариф.Класс
	|			И ДанныеСКоличествоБилетовВМесяце.ДатаДляТарифа >= ПериодыТарифовАэроэкспресс.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСКоличествоБилетовВМесяце.ТарифЧисло,
	|	ДанныеСКоличествоБилетовВМесяце.Тариф,
	|	ДанныеСКоличествоБилетовВМесяце.Количество,
	|	ДанныеСКоличествоБилетовВМесяце.Цена,
	|	ДанныеСКоличествоБилетовВМесяце.Стоимость,
	|	ДанныеСКоличествоБилетовВМесяце.АгентВозн,
	|	ДанныеСКоличествоБилетовВМесяце.СуммаАгентВозн,
	|	ДанныеСКоличествоБилетовВМесяце.ДатаДляТарифа,
	|	ДанныеСКоличествоБилетовВМесяце.КоличествоБилетовВМесяце
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыТарифовАэроэкспресс.Тариф.Наименование КАК Тариф,
	|	МаксимальныйПериодТарифа.ТарифЧисло КАК ТарифЧисло,
	|	МаксимальныйПериодТарифа.Количество КАК Количество,
	|	МаксимальныйПериодТарифа.Цена КАК Цена,
	|	МаксимальныйПериодТарифа.Стоимость КАК Стоимость,
	|	МаксимальныйПериодТарифа.АгентВозн КАК АгентВозн,
	|	МаксимальныйПериодТарифа.СуммаАгентВозн КАК СуммаАгентВозн,
	|	МаксимальныйПериодТарифа.ДатаДляТарифа КАК ДатаДляТарифа,
	|	МаксимальныйПериодТарифа.КоличествоБилетовВМесяце КАК КоличествоБилетовВМесяце,
	|	МаксимальныйПериодТарифа.Период КАК Период,
	|	ПериодыТарифовАэроэкспресс.Тариф КАК ТарифДействующийНаДату
	|ПОМЕСТИТЬ ТарифИПериод
	|ИЗ
	|	МаксимальныйПериодТарифа КАК МаксимальныйПериодТарифа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыТарифовАэроэкспресс КАК ПериодыТарифовАэроэкспресс
	|		ПО МаксимальныйПериодТарифа.ТарифЧисло = ПериодыТарифовАэроэкспресс.Тариф.Класс
	|			И МаксимальныйПериодТарифа.Период = ПериодыТарифовАэроэкспресс.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТарифИПериод.Тариф КАК Тариф,
	|	ТарифИПериод.ТарифЧисло КАК ТарифЧисло,
	|	ТарифИПериод.Количество КАК Количество,
	|	ТарифИПериод.Цена КАК Цена,
	|	ТарифИПериод.Стоимость КАК Стоимость,
	|	ТарифИПериод.СуммаАгентВозн КАК СуммаАгентВозн,
	|	ТарифИПериод.ДатаДляТарифа КАК ДатаДляТарифа,
	|	ТарифИПериод.КоличествоБилетовВМесяце КАК КоличествоБилетовВМесяце,
	|	ТарифИПериод.Период КАК Период,
	|	ТарифИПериод.ТарифДействующийНаДату КАК ТарифДействующийНаДату,
	|	МАКСИМУМ(ЕСТЬNULL(ТарифыАэроэкспрессПоездаГрадация.Вознаграждение, 0)) КАК АгентВозн,
	|	НАЧАЛОПЕРИОДА(ТарифИПериод.ДатаДляТарифа, МЕСЯЦ) КАК МесяцПериода
	|ПОМЕСТИТЬ БезРасчета
	|ИЗ
	|	ТарифИПериод КАК ТарифИПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыАэроэкспрессПоезда.Градация КАК ТарифыАэроэкспрессПоездаГрадация
	|		ПО ТарифИПериод.ТарифДействующийНаДату = ТарифыАэроэкспрессПоездаГрадация.Ссылка
	|			И ТарифИПериод.КоличествоБилетовВМесяце >= ТарифыАэроэкспрессПоездаГрадация.КоличествоБилетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТарифИПериод.ТарифДействующийНаДату,
	|	ТарифИПериод.Период,
	|	ТарифИПериод.КоличествоБилетовВМесяце,
	|	ТарифИПериод.ДатаДляТарифа,
	|	ТарифИПериод.СуммаАгентВозн,
	|	ТарифИПериод.Стоимость,
	|	ТарифИПериод.Цена,
	|	ТарифИПериод.Количество,
	|	ТарифИПериод.ТарифЧисло,
	|	ТарифИПериод.Тариф,
	|	НАЧАЛОПЕРИОДА(ТарифИПериод.ДатаДляТарифа, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БезРасчета.Тариф КАК Тариф,
	|	СУММА(БезРасчета.Количество) КАК Количество,
	|	БезРасчета.Цена КАК Цена,
	|	СУММА(БезРасчета.Стоимость) КАК Стоимость,
	|	БезРасчета.АгентВозн КАК АгентВозн,
	|	Сумма(БезРасчета.АгентВозн * БезРасчета.Количество) КАК СуммаАгентВозн,
	|	БезРасчета.МесяцПериода КАК МесяцПериода
	|ИЗ
	|	БезРасчета КАК БезРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	БезРасчета.Тариф,
	|	БезРасчета.Цена,
	|	БезРасчета.АгентВозн,
	|	БезРасчета.МесяцПериода";
	
	Запрос.УстановитьПараметр("ТЗ",ТЗСБилетами);
	Запрос.УстановитьПараметр("ДанныеПоЧислам",ТЗ);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
	
КонецФункции


Процедура ЗаполнитьДанныеДляАвтобусов(ДанныеДляЗаполнения,Месяц)
	
	ПодготовитьДанныеПериодов(ДанныеДляЗаполнения,Месяц);
	ДанныеДляЗаполнения.Направление = "Автобусах";
	ДанныеДляЗаполнения.НДС = "НДС 20%";
	ДанныеДляЗаполнения.ДействияСБилетами = "реализации";
	ДанныеДляЗаполнения.НаправлениеРеализации = "реализации";

КонецПроцедуры

Процедура ЗаполнитьДанныеДляПоездовОтмена(ДанныеДляЗаполнения,Месяц)
	
	ПодготовитьДанныеПериодов(ДанныеДляЗаполнения,Месяц);
	ДанныеДляЗаполнения.Направление = "Поездах";
	ДанныеДляЗаполнения.НДС = "НДС 0%";
	ДанныеДляЗаполнения.ДействияСБилетами = "осуществлению действия по отмене";
	ДанныеДляЗаполнения.НаправлениеРеализации = "отмене";

КонецПроцедуры

Процедура ЗаполнитьДанныеДляАвтобусовОтмена(ДанныеДляЗаполнения,Месяц)
	
	ПодготовитьДанныеПериодов(ДанныеДляЗаполнения,Месяц);
	ДанныеДляЗаполнения.Направление = "Автобусах";
	ДанныеДляЗаполнения.НДС = "НДС 20%";
	ДанныеДляЗаполнения.ДействияСБилетами = "осуществлению действия по отмене";
	ДанныеДляЗаполнения.НаправлениеРеализации = "отмене";

КонецПроцедуры

Процедура ПодготовитьДанныеПериодов(ДанныеДляЗаполнения,Месяц)
	
	НачалоПериода = НачалоМесяца(Месяц);
	КонецПериода = КонецМесяца(Месяц);
	
	МесяцПрописью = "" + Формат(Месяц,"Л=ru_RU; ДФ='MMММ yyyy'") + " года";
	ДанныеДляЗаполнения.Период = МесяцПрописью;
	
	//ПериодПрописью = "" + Формат(НачалоПериода,"ДФ='dd ММММ yyyy'; ДЛФ=DD") + " года по " + Формат(КонецПериода,"ДФ='dd ММММ yyyy'; ДЛФ=DD") + " года";
	//ДанныеДляЗаполнения.ПериодПрописью = ПериодПрописью;
	//
	//ДанныеДляЗаполнения.НомерДоговора = "КОМ-2021-022";
	//ДанныеДляЗаполнения.ПериодДоговора = "01 мая 2021 года";
	
КонецПроцедуры

функция ДанныеДляШапки(Месяц)
	
	СтруктураШапка = Новый Структура;
	
	НачалоПериода = НачалоМесяца(Месяц);
	КонецПериода = КонецМесяца(Месяц);
	
		
	ПериодПрописью = "" + Формат(НачалоПериода,"ДФ='dd ММММ yyyy'; ДЛФ=DD") + " года по " + Формат(КонецПериода,"ДФ='dd ММММ yyyy'; ДЛФ=DD") + " года";
	СтруктураШапка.Вставить("ПериодПрописью",ПериодПрописью);
	
	СтруктураШапка.Вставить("НомерДоговора","КОМ-2021-022");
	СтруктураШапка.Вставить("ПериодДоговора","01 мая 2021 года");
	
	Возврат СтруктураШапка;
	
КонецФункции

#КонецОбласти


#Область ПодготовкаПустыхДанных
Функция ПараметрыОтчетаАгента()
	
	СтруктураОтчета = Новый Структура;
	//СтруктураОтчета.Вставить("ПериодПрописью",""); //01 мая 2021 года по 31 мая 2022 года
	//СтруктураОтчета.Вставить("НомерДоговора",""); //номер договора	
	//СтруктураОтчета.Вставить("ПериодДоговора",""); //15 мая 2022 года
	СтруктураОтчета.Вставить("ДействияСБилетами",""); // реализации/осуществлению действия по отмене 
	СтруктураОтчета.Вставить("Направление","");//Поездах/Автобусах
	СтруктураОтчета.Вставить("НаправлениеРеализации",); //реализации/отмене
	СтруктураОтчета.Вставить("ТаблицаДанных",ПодготовитьПустуюТаблицу());
	СтруктураОтчета.Вставить("Период","");
	СтруктураОтчета.Вставить("НДС",""); //Автобусы = 20%,Поезда = 0%
		
	Возврат СтруктураОтчета;
		
КонецФункции

Функция ПодготовитьПустуюТаблицу()
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Тариф",ОбщегоНазначения.ОписаниеТипаСтрока(150),"Тариф");
	ТЗ.Колонки.Добавить("Количество",ОбщегоНазначения.ОписаниеТипаЧисло(15,2,ДопустимыйЗнак.Любой),"Количество");
	ТЗ.Колонки.Добавить("Цена",ОбщегоНазначения.ОписаниеТипаЧисло(15,2,ДопустимыйЗнак.Любой),"Цена");
	ТЗ.Колонки.Добавить("Стоимость",ОбщегоНазначения.ОписаниеТипаЧисло(15,2,ДопустимыйЗнак.Любой),"Стоимость");
	ТЗ.Колонки.Добавить("АгентВозн",ОбщегоНазначения.ОписаниеТипаЧисло(15,2,ДопустимыйЗнак.Любой),"АгентВозн");
	ТЗ.Колонки.Добавить("СуммаАгентВозн",ОбщегоНазначения.ОписаниеТипаЧисло(15,2,ДопустимыйЗнак.Любой),"СуммаАгентВозн");
	ТЗ.Колонки.Добавить("ТарифЧисло",ОбщегоНазначения.ОписаниеТипаЧисло(10,0,ДопустимыйЗнак.Любой),"ТарифЧисло");
    ТЗ.Колонки.Добавить("ДатаДляТарифа",ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата),"ДатаДляТарифа");

	
	Возврат ТЗ;
	
КонецФункции
#КонецОбласти

Процедура ДобавитьОтчетАгента(ТабДок,ДанныеОтчетаАгента)
	
	ВывестиПустуюСтроку(ТабДок);
	
	Макет = ПолучитьМакет("ОтчетАгентаАэроэкспресс");
	
	//Области
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокОтчета");
	ОбластьДействия = Макет.ПолучитьОбласть("ДействияОтчета");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьИтого = Макет.ПолучитьОбласть("СтрокаИтого");
	
	//ДействияСБилетами,Направление
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОтчетаАгента);
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ОбластьДействия.Параметры.Заполнить(ДанныеОтчетаАгента);
	ТабДок.Вывести(ОбластьДействия);
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ИтогоКоличество = 0;
	ИтогоСтоимость = 0;
	ИтогоСуммаАгентВозн = 0;
	Номер = 1;
	Для Каждого ДанныеСтроки Из ДанныеОтчетаАгента.ТаблицаДанных Цикл
		
		ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
		ОбластьСтрока.Параметры.Номер = Номер;
		Номер = Номер + 1;
		ТабДок.Вывести(ОбластьСтрока);
		
		ИтогоКоличество = ИтогоКоличество + ДанныеСтроки.Количество;
		ИтогоСтоимость = ИтогоСтоимость + ДанныеСтроки.Стоимость;
		ИтогоСуммаАгентВозн = ИтогоСуммаАгентВозн + ДанныеСтроки.СуммаАгентВозн;
		
		
	КонецЦикла;
	
	ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
	ОбластьИтого.Параметры.ИтогоСуммаАгентВозн = ИтогоСуммаАгентВозн;

	ТабДок.Вывести(ОбластьИтого);
		
	
	
КонецПроцедуры

